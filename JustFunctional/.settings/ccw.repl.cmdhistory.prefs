cmdhistory=["((moja 3) 4 5)" "(clojure.core/ns JustFunctional.First)\\n((moja 3) 4 5)\\n(clojure.core/ns user)" "(clojure.core/ns JustFunctional.First)\\n(def moja [z] (fn [x y] (+ x y z)))\\n(clojure.core/ns user)" "(clojure.core/ns JustFunctional.First)\\n(defn moja [z] (fn [x y] (+ x y z)))\\n(clojure.core/ns user)" "(def a1 (atom 2))" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'JustFunctional.First)))" "@r1" "(ns JustFunctional.five)" "@r1" "@r2" "(dosync\\n(alter r1 debit 300)\\n(alter r2 credit 300))" "@r1" "@r2" ";; Switching to JustFunctional.five namespace" "@r1" "(tranfer-funds r2 r1 200)" "(defn transfer-funds [sender receiver amount]\\n  (dosync\\n   (alter sender debit amount)\\n   (alter receiver credit amount)))" "(tranfer-funds r2 r1 200)" "(transfer-funds r2 r1 200)" ";; Switching to JustFunctional.five namespace" "(transfer-funds [r1 r2 500])" ";; Switching to JustFunctional.five namespace" "(transfer-funds r1 r2 300)" "@r1" "@r2" "a2" "(println a2)" "s2" "a2" "(+ 5 8)" "(hypot 5 10)" "(hypot 4 5)" "(hypot 5 12)" "(credit r1 200)" "(hypot 5 4)" "(+ 5 4)" "(first v)" "(debit r2 100)" "(average [40 60 80])" "ns" "*ns*" "(ns five)" "*ns*" "(average [50 60 80])" "(hypot 5 4)" "(hypot 5 8)" "(first v)" "(-main)" "(index)" "(-main)"]
eclipse.preferences.version=1
