cmdhistory=["((moja 3) 4 5)" "(clojure.core/ns JustFunctional.First)\\n((moja 3) 4 5)\\n(clojure.core/ns user)" "(clojure.core/ns JustFunctional.First)\\n(def moja [z] (fn [x y] (+ x y z)))\\n(clojure.core/ns user)" "(clojure.core/ns JustFunctional.First)\\n(defn moja [z] (fn [x y] (+ x y z)))\\n(clojure.core/ns user)" "(def a1 (atom 2))" "(ccw.debug.serverrepl/with-exception-serialization (clojure.core/binding [clojure.core/*compile-path* \\"classes\\"] (clojure.core/compile 'JustFunctional.First)))" "@r1" "(ns JustFunctional.five)" "@r1" "@r2" "(dosync\\n(alter r1 debit 300)\\n(alter r2 credit 300))" "@r1" "@r2" ";; Switching to JustFunctional.five namespace" "@r1" "(tranfer-funds r2 r1 200)" "(defn transfer-funds [sender receiver amount]\\n  (dosync\\n   (alter sender debit amount)\\n   (alter receiver credit amount)))" "(tranfer-funds r2 r1 200)" "(transfer-funds r2 r1 200)" ";; Switching to JustFunctional.five namespace" "(transfer-funds [r1 r2 500])" ";; Switching to JustFunctional.five namespace" "(transfer-funds r1 r2 300)" "@r1" "@r2" "a2" "(println a2)" "s2" "a2" "(+ 5 8)" "(hypot 5 10)" "(hypot 4 5)" "(hypot 5 12)" "(credit r1 200)" "(hypot 5 4)" "(+ 5 4)" "(first v)" "(debit r2 100)" "(average [40 60 80])" "ns" "*ns*" "(ns five)" "*ns*" "(average [50 60 80])" "(hypot 5 4)" "(hypot 5 8)" "(first v)" "(-main)" "(index)" "(-main)" "(index \\"dsds\\")" "(println (index \\"dfdf\\"))" "(-main)" "(.stop -main)" "(defn index [par1] (html5\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t    [\:head\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t      [\:title \\"Hallo world\\"]]\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t    [\:body\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t      [\:div {\:id \\"content\\"} (str \\"Index page\\" par1)]\\r\\n               [\:div {\:id \\"content2\\"} \\r\\n                [\:form {\:action \\"/first\\" \:method \\"get\\"}\\r\\n\\t                (label \\"email  2\\" \\"E-mail\: \\")\\r\\n\\t                (text-field \\"email\\" \\"email\\")\\r\\n\\t                (label \\"password\\" \\"Password\: \\")\\r\\n\\t                (password-field \\"password\\" \\"password\\")\\r\\n\\t                (submit-button {\:id \\"loginButton\\"} \\"Log in\\")]]]))" "(map deref [(agent {\:c 42}) (atom 12)])" "(println a2)" "(deref a2)" "(deref a1)" "(deref a2)" "(server)" "(index \\"dsd\\")" "(server)" "(use JustFunctional.core)" "(server)" "(get ttt \:b)" "(server)" "(mg/connect)" "(monger.core/disconnect\!)" "(insert \\"document\\" { \:first_name \\"John\\" \:last_name \\"Lennon\\" })" "(mc/insert-and-return \\"documents\\" {\:name \\"John\\" \:age 30})" "(mg/connect)" "(mc/insert-and-return \\"documents\\" {\:name \\"John\\" \:age 30})" "(mg/connect)" "(monger.multi.collection/create \\"justFunctional\\" \\"users\\")" "(mmc/insert \\"documents\\" {\:first_name \\"John\\"  \:last_name \\"Lennon\\"})" "(mg/connect)" "(mmc/insert \\"documents\\" {\:first_name \\"John\\"  \:last_name \\"Lennon\\"})" "(mc/insert \\"documents\\" {\:first_name \\"John\\"  \:last_name \\"Lennon\\"})" "(server)" "(clojure.core/ns logic.just_core)\\n(defroutes routes\\n  (GET \\"/\\" [] \\"<h2>Hello World</h2>\\")\\n  (GET \\"/index\\" [] (index-page ))\\n  (GET \\"/login\\" [] (login-page))\\n  (GET \\"/register\\" [] (register-page))\\n;  (POST \\"/index\\" [name surname email password] (registration {\:name name \:surname surname \:email email \:password password}))\\n  (POST \\"/user-home\\" [email password] (user-home email password))\\n  (route/resources \\"/\\")\\n  (route/not-found \\"404 Page Not Found\\"))\\n(clojure.core/ns logic.just-core)" "(server)" "(ns logic.just_core)" "(server)" "(fn [name surname email password] \\r\\n  (try (\\r\\n         (do (println name) \\r\\n           (db/save-user name surname email password) (render-template \\"home\\" {\:name name})))\\r\\n    (catch Exception e (render-template \\"error\\" {\:error-message (.getMessage e)}) )))" "(registration \\"k\\" \\"k\\" \\"k\\" \\"k\\")" "(server)" "(db/log-in \\"anannik@gmail.com\\" \\"password\\")" "(ns db.mongodb)" "(+ 3 5)" "ns db.mongodb" "(logging \\"aaa\\" \\"aaa\\")" "ns db.mongodb" "(ns db.mongodb)" "(log-in \\"anci12_kg@hotmail.com\\" \\"password\\")" "(ns logic.just-core)" "(logging \\"aaa\\" \\"aaa\\")" "(ns just-core)" "(logging \\"anci12_kg@hotmail.com\\" \\"password\\")" "(ns logic.just-core)" "(server)" "(logging \\"anc\\" \\"ss\\")" "(logging \\"anci12_kg@hotmail.com\\" \\"password\\")" "(server)"]
eclipse.preferences.version=1
